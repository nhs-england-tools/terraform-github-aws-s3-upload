name: "Test stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string

jobs:
  test-unit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
      - name: Authenticate with AWS over OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ASSUME_ROLE_NAME_PROVISION_EXAMPLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: make test-unit action="infrastructure-set-up"
      - name: Authenticate with AWS over OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ASSUME_ROLE_NAME_UPLOAD_EXAMPLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: make test-unit action="file-update"
      - name: Authenticate with AWS over OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ASSUME_ROLE_NAME_PROVISION_EXAMPLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: make test-unit action="infrastructure-tear-down"
  test-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Run linting"
        run: |
          make test-lint
      - name: "Save the linting result"
        run: |
          echo "Nothing to save"
  test-coverage:
    needs: [test-unit]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Run test coverage check"
        run: |
          make test-coverage
      - name: "Save the coverage check result"
        run: |
          echo "Nothing to save"
  perform-static-analysis:
    needs: [test-unit]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 5
    name: "Perform static analysis"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history is needed to improving relevancy of reporting
      - name: "Perform static analysis"
        uses: ./.github/actions/perform-static-analysis
        with:
          sonar_organisation_key: "${{ secrets.SONAR_ORGANISATION_KEY }}"
          sonar_project_key: "${{ secrets.SONAR_PROJECT_KEY }}"
          sonar_token: "${{ secrets.SONAR_TOKEN }}"
